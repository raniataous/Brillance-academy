{"version":3,"file":"stripe-api.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA,wIAAwI;AACxI;AACA;;AAEA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEsB;;;;;;;UChItB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAC+C;AAE/C,MAAMC,QAAQ,GAAG,CAAE,MAAM;EACxB,IAAIC,MAAM;EACV,IAAIC,cAAc;EAClB,IAAIC,YAAY,EAAEC,cAAc;EAChC,MAAMC,YAAY,GAAG,wBAAwB;EAC7C,MAAMC,gBAAgB,GAAG,kCAAkC;EAC3D,MAAMC,cAAc,GAAG,sBAAsB;EAC7C,IAAIC,SAAS;EACb,IAAIC,eAAe,GAAG,KAAK;EAC3B,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","sources":["webpack://learnpress-stripe/./node_modules/@stripe/stripe-js/dist/stripe.esm.js","webpack://learnpress-stripe/webpack/bootstrap","webpack://learnpress-stripe/webpack/runtime/define property getters","webpack://learnpress-stripe/webpack/runtime/hasOwnProperty shorthand","webpack://learnpress-stripe/webpack/runtime/make namespace object","webpack://learnpress-stripe/./assets/js/stripe-api.js"],"sourcesContent":["var V3_URL = 'https://js.stripe.com/v3';\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(V3_URL, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!V3_URL_REGEX.test(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(V3_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"1.54.2\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise = null;\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise !== null) {\n    return stripePromise;\n  }\n\n  stripePromise = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      }\n\n      script.addEventListener('load', function () {\n        if (window.Stripe) {\n          resolve(window.Stripe);\n        } else {\n          reject(new Error('Stripe.js not available'));\n        }\n      });\n      script.addEventListener('error', function () {\n        reject(new Error('Failed to load Stripe.js'));\n      });\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  });\n  return stripePromise;\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n// own script injection.\n\nvar stripePromise$1 = Promise.resolve().then(function () {\n  return loadScript(null);\n});\nvar loadCalled = false;\nstripePromise$1[\"catch\"](function (err) {\n  if (!loadCalled) {\n    console.warn(err);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now();\n  return stripePromise$1.then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Stripe js handle payment with form mount from Lib Stripe JS\n *\n * @since 4.0.2\n * @version 1.0.0\n */\nimport { loadStripe } from '@stripe/stripe-js';\n\nconst lpStripe = ( () => {\n\tlet Stripe;\n\tlet elCheckoutForm;\n\tlet elStripeForm, elPageCheckout;\n\tconst idStripeForm = 'lp-stripe-payment-form';\n\tconst idBtnPlaceHolder = 'learn-press-checkout-place-order';\n\tconst idPageCheckout = 'learn-press-checkout';\n\tlet urlHandle;\n\tlet mountStripeDone = false;\n\tlet errorMessage;\n\n\tconst fetchAPI = ( args, callBack = {} ) => {\n\t\tfetch( urlHandle, {\n\t\t\tmethod: 'POST',\n\t\t\t/*headers: {\n\t\t\t\t'X-WP-Nonce': lpGlobalSettings.nonce,\n\t\t\t},*/\n\t\t\tbody: args,\n\t\t} )\n\t\t\t.then( ( res ) => res.text() )\n\t\t\t.then( ( data ) => {\n\t\t\t\tdata = LP.parseJSON( data );\n\t\t\t\tcallBack.success( data );\n\t\t\t} )\n\t\t\t.finally( () => {\n\t\t\t\tcallBack.completed();\n\t\t\t} )\n\t\t\t.catch( ( err ) => callBack.error( err ) );\n\t};\n\n\t/**\n\t * Load Stripe JS via publish key\n\t * then mount form Stripe\n\t *\n\t * @return {Promise<void>}\n\t */\n\tconst mountFormStripe = async () => {\n\t\ttry {\n\t\t\tStripe = await loadStripe( lpStripeSetting.publish_key || '' );\n\n\t\t\t// Display form Stripe\n\t\t\tconst options = {\n\t\t\t\tclientSecret: lpStripeSetting.publishableKey || '',\n\t\t\t\tappearance: {},\n\t\t\t};\n\t\t\telStripeForm = Stripe.elements( options );\n\n\t\t\t// Create and mount the Payment Element\n\t\t\tconst paymentElement = elStripeForm.create( 'payment' );\n\t\t\tpaymentElement.on( 'loaderror', function( event ) {\n\t\t\t\terrorMessage = event.error.message;\n\t\t\t} );\n\t\t\tpaymentElement.on( 'ready', function( event ) {\n\t\t\t\tmountStripeDone = true;\n\t\t\t} );\n\t\t\tpaymentElement.mount( `#${ idStripeForm }` );\n\t\t} catch ( error ) {\n\t\t\terrorMessage = error.message;\n\t\t}\n\t};\n\n\t/**\n\t * Confirm the PaymentIntent with url has parameter \"payment_intent\"\n\t *\n\t * https://stripe.com/docs/js/payment_intents/confirm_payment\n\t *\n\t * @param  return_url\n\t * @param  callBack\n\t */\n\tconst confirmStripePayment = ( return_url, callBack ) => {\n\t\tif ( typeof Stripe === 'undefined' ) {\n\t\t\tconsole.log( 'Stripe is not defined' );\n\t\t}\n\t\tif ( typeof elStripeForm === 'undefined' ) {\n\t\t\tconsole.log( 'Stripe form not mounted' );\n\t\t}\n\n\t\tStripe.confirmPayment( {\n\t\t\telements: elStripeForm,\n\t\t\tconfirmParams: {\n\t\t\t\treturn_url,\n\t\t\t},\n\t\t} ).then( function( result ) {\n\t\t\tcallBack( result );\n\t\t} );\n\t};\n\tconst setMessageError = ( mess_text ) => {\n\t\tconst elMessage = `<div class=\"learn-press-message error\">${ mess_text }</div>`;\n\t\telPageCheckout.insertAdjacentHTML( 'afterbegin', elMessage );\n\t\telPageCheckout.scrollIntoView( {\n\t\t\tbehavior: 'smooth',\n\t\t} );\n\t};\n\n\treturn {\n\t\tinit: async () => {\n\t\t\tif ( 'undefined' === typeof lpStripeSetting ) {\n\t\t\t\tconsole.log( 'LP Stripe Setting is not defined' );\n\t\t\t}\n\n\t\t\tif ( 'undefined' === typeof lpStripeSetting.payment_stripe_via_iframe ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telPageCheckout = document.getElementById( idPageCheckout );\n\t\t\telCheckoutForm = document.getElementById( 'learn-press-checkout-form' );\n\t\t\tif ( ! elCheckoutForm ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait mountFormStripe();\n\t\t},\n\t\tevents: () => {\n\t\t\tdocument.addEventListener( 'click', function( e ) {\n\t\t\t\tconst target = e.target;\n\n\t\t\t\tif ( target.id === idBtnPlaceHolder ) {\n\t\t\t\t\tconst elBtnPlaceHolder = target;\n\t\t\t\t\telCheckoutForm = document.getElementById( 'learn-press-checkout-form' );\n\t\t\t\t\tif ( ! elCheckoutForm ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst formData = new FormData( elCheckoutForm );\n\t\t\t\t\tif ( formData.get( 'payment_method' ) !== 'stripe' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif ( ! elPageCheckout ) {\n\t\t\t\t\t\tconsole.error( 'Page checkout is not defined' );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst elMes = elPageCheckout.querySelectorAll( '.learn-press-message.error' );\n\t\t\t\t\tif ( elMes.length > 0 ) {\n\t\t\t\t\t\telMes.forEach( ( el ) => {\n\t\t\t\t\t\t\tel.remove();\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' !== typeof errorMessage ) {\n\t\t\t\t\t\tsetMessageError( errorMessage );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'undefined' === typeof lpStripeSetting.publishableKey ) {\n\t\t\t\t\t\tsetMessageError( 'Stripe Publish Key is generate failed, please check again config key!' );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! mountStripeDone ) {\n\t\t\t\t\t\tsetMessageError( 'Stripe payment not load done. Please wait!' );\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Submit form Stripe to check valid fields\n\t\t\t\t\t * https://stripe.com/docs/js/elements/submit\n\t\t\t\t\t *\n\t\t\t\t\t * When check all fields is valid, will submit checkout to create order,\n\t\t\t\t\t * then pass url lp order to confirmStripePayment() to call Stripe API,\n\t\t\t\t\t * Stripe API will return url redirect has parameter \"payment_intent\",\n\t\t\t\t\t * server will catch it and check if payment_intent is valid, LP Order will set to Complete\n\t\t\t\t\t */\n\t\t\t\t\telStripeForm.submit()\n\t\t\t\t\t\t.then( function( result ) {\n\t\t\t\t\t\t\tif ( 'undefined' !== typeof result.error ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telBtnPlaceHolder.classList.add( 'loading' );\n\t\t\t\t\t\t\telBtnPlaceHolder.disabled = true;\n\t\t\t\t\t\t\telBtnPlaceHolder.innerText = lpCheckoutSettings.i18n_processing;\n\n\t\t\t\t\t\t\turlHandle = new URL( lpCheckoutSettings.ajaxurl );\n\t\t\t\t\t\t\turlHandle.searchParams.set( 'lp-ajax', 'checkout' );\n\n\t\t\t\t\t\t\tfetchAPI( formData, {\n\t\t\t\t\t\t\t\tbefore: () => {},\n\t\t\t\t\t\t\t\tsuccess: ( res ) => {\n\t\t\t\t\t\t\t\t\tif ( 'fail' === res.result ) {\n\t\t\t\t\t\t\t\t\t\telBtnPlaceHolder.classList.remove( 'loading' );\n\t\t\t\t\t\t\t\t\t\telBtnPlaceHolder.disabled = false;\n\t\t\t\t\t\t\t\t\t\telBtnPlaceHolder.innerText = lpCheckoutSettings.i18n_place_order;\n\t\t\t\t\t\t\t\t\t\tsetMessageError( res.messages );\n\t\t\t\t\t\t\t\t\t} else if ( 'processing' === res.result ) {\n\t\t\t\t\t\t\t\t\t\telBtnPlaceHolder.innerText = lpCheckoutSettings.i18n_redirecting;\n\t\t\t\t\t\t\t\t\t\tconfirmStripePayment( res.redirect, ( result ) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( result );\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: ( error ) => {},\n\t\t\t\t\t\t\t\tcompleted: () => {},\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t};\n} )();\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tlpStripe.init().then( () => {} );\n} );\n\nlpStripe.events();\n"],"names":["loadStripe","lpStripe","Stripe","elCheckoutForm","elStripeForm","elPageCheckout","idStripeForm","idBtnPlaceHolder","idPageCheckout","urlHandle","mountStripeDone","errorMessage","fetchAPI","args","callBack","arguments","length","undefined","fetch","method","body","then","res","text","data","LP","parseJSON","success","finally","completed","catch","err","error","mountFormStripe","lpStripeSetting","publish_key","options","clientSecret","publishableKey","appearance","elements","paymentElement","create","on","event","message","mount","confirmStripePayment","return_url","console","log","confirmPayment","confirmParams","result","setMessageError","mess_text","elMessage","insertAdjacentHTML","scrollIntoView","behavior","init","payment_stripe_via_iframe","document","getElementById","events","addEventListener","e","target","id","elBtnPlaceHolder","formData","FormData","get","preventDefault","elMes","querySelectorAll","forEach","el","remove","submit","classList","add","disabled","innerText","lpCheckoutSettings","i18n_processing","URL","ajaxurl","searchParams","set","before","i18n_place_order","messages","i18n_redirecting","redirect"],"sourceRoot":""}